# 多模型训练配置文件 - 混凝土坍落度识别项目   早听

# ==================== 数据相关配置 ====================
data:
  data_dir: "data/raw/27分类"                    # 原始图像数据存放目录
  input_shape: [224, 224]                # 输入图像尺寸 [高度, 宽度]，VGG16标准输入224x224
  num_classes: 27                         # 分类类别数量（坍落度三个范围）
  class_names: ["类别1_120-130", "类别2_131-135", "类别3_136-140","类别4_150-160",
                "类别5_161-165","类别6_166-169","类别7_171-174","类别8_176-179",
                "类别9_181-184","类别10_185-190","类别11_190-195","类别12_194-200",
                "类别13_200-205","类别14_205-210","类别15_210-215","类别16_215-220",
                "类别17_220-225","类别18_225-230","类别19_230-235","类别20_235-240",
                 "类别21_240-250","类别22_250-260","类别23_260-265","类别24_262-270",
                "类别25_271-275","类别26_276-280","类别27_281-285"]  # 类别名称列表

  # ==================== 数据划分配置 ====================
  # 数据划分比例（三分法）
  train_ratio: 0.6                       # 训练集比例（60%）
  val_ratio: 0.2                         # 验证集比例（20%）
  test_ratio: 0.2                        # 测试集比例（20%）
  
  # 标注文件路径
  train_annotation_file: "data/annotations/cls_train.txt"   # 训练集标注
  val_annotation_file: "data/annotations/cls_val.txt"       # 验证集标注
  test_annotation_file: "data/annotations/cls_test.txt"     # 测试集标注（evaluate_model.py使用）
  
  # ==================== 其他配置 ====================
  random_seed: 10101                     # 数据集划分的随机种子，确保结果可复现 10101
  stratified_split: true                  # 是否使用分层采样划分数据集
                                         # true: 确保训练集和验证集的类别比例一致
                                         # false: 随机划分

# ==================== 数据加载配置 ====================
dataloader:
  batch_size: 8          # 批次大小：每次训练处理的图像数量
                         # 小值：内存占用少，训练稳定，但速度慢
                         # 大值：训练快，但需要更多内存，可能不稳定
  num_workers: 2         # 数据加载线程数：0表示主线程加载
                         # Windows建议设为0，Linux可设为2-4加快加载
  shuffle: true          # 是否打乱数据顺序：true可提高训练效果

# ==================== 模型结构配置 ====================
model:
  name: "resnet18"                          # 模型名称：vgg16, resnet18, resnet50
  pretrained: true                      # 是否使用预训练权重
                                         # false: 从头开始训练（需要更多数据和时间）
                                         # true: 使用ImageNet预训练权重（推荐，收敛快）
  dropout: 0.5                          # Dropout比例：防止过拟合
                                         # 0.0-1.0，越大越能防止过拟合但可能欠拟合

  # VGG特定配置
  vgg:
    progress: true                       # 是否显示预训练权重下载进度
    model_dir: "models/pretrained"       # 预训练权重文件存放目录
    pretrained_weights: null             # 自定义预训练权重文件路径
                                         # 例如: "models/pretrained/vgg16-397923af.pth"
                                         # 为null时使用默认下载方式

  # ResNet特定配置
  resnet:
    replace_stride_with_dilation: [false, false, false]  # 是否用膨胀卷积替换步长
    zero_init_residual: false           # 是否对残差块的最后一个BN层进行零初始化
    pretrained_weights: "models/pretrained/resnet18-f37072fd.pth"  # ResNet18预训练权重路径（自动下载）
                                         # ResNet18: "models/pretrained/resnet18-f37072fd.pth"
                                         # ResNet50: "models/pretrained/resnet50-11ad3fa6.pth"
                                         # 为null时使用默认下载方式

# ==================== 训练过程配置 ====================
training:
  epochs: 100                             # 训练轮数：数据集完整训练的次数
                                         # 从头训练建议80-200，预训练可用20-50
  learning_rate: 0.0001                   # 初始学习率：控制参数更新步长
                                         # 从头训练：0.001-0.01，预训练：0.0001-0.001
  # ==================== 优化器配置 ====================
  optimizer:
    name: "Adam"                         # 优化器类型：Adam, SGD, AdamW, RMSprop, Adagrad
    params:
      lr: 0.0001                         # 学习率（会被上面的learning_rate覆盖）
      weight_decay: 0.0001               # 权重衰减（L2正则化）
      # Adam特定参数
      betas: [0.9, 0.999]               # Adam的beta参数
      eps: 1e-8                         # 数值稳定性参数
      # SGD特定参数
      momentum: 0.9                     # SGD动量
      nesterov: false                   # 是否使用Nesterov动量

  # ==================== 损失函数配置 ====================
  loss_function:
    name: "CrossEntropyLoss"     # 损失函数类型
                                         # CrossEntropyLoss: 标准交叉熵
                                         # WeightedCrossEntropyLoss: 加权交叉熵（自动处理类别不平衡）
                                         # FocalLoss: Focal Loss（专门处理类别不平衡）
                                         # LabelSmoothingCrossEntropy: 标签平滑交叉熵
    params:
      auto_weight: true                  # 是否自动计算类别权重
      label_smoothing: 0.1               # 标签平滑参数（0.0-0.3）
      # FocalLoss特定参数
      focal_alpha: 1.0                   # Focal Loss的alpha参数
      focal_gamma: 2.0                   # Focal Loss的gamma参数
  # ==================== 学习率调度策略 ====================
  scheduler:
    name: "none"            # 调度器类型：StepLR, MultiStepLR, CosineAnnealingLR, ReduceLROnPlateau, None
    params:
      # CosineAnnealingLR参数
      T_max: "auto"                      # 余弦周期长度，"auto"表示自动使用总epoch数
      eta_min: 1e-6                      # 最小学习率

      # StepLR参数
      step_size: 7                       # 每隔多少个epoch降低学习率
      gamma: 0.5                         # 学习率衰减倍数

      # MultiStepLR参数
      milestones: [10, 15]               # 在指定epoch降低学习率

      # ReduceLROnPlateau参数
      mode: "min"                        # 监控模式："min"表示指标越小越好
      factor: 0.5                        # 学习率衰减倍数
      patience: 3                        # 容忍epochs数
      threshold: 1e-4                    # 改善阈值
      cooldown: 0                        # 冷却期
      min_lr: 0                          # 最小学习率

      # ExponentialLR参数
      # gamma: 0.95                      # 指数衰减因子

      # CosineAnnealingWarmRestarts参数
      T_0: 10                            # 第一次重启的周期长度
      T_mult: 1                          # 周期长度倍增因子

# ==================== 模型保存配置 ====================
save:
  checkpoint_dir: "models/checkpoints"   # 模型检查点保存目录
  save_best_only: true                 # 是否只保存最佳模型
                                         # false: 保存所有epoch的模型（占用更多空间）
                                         # true: 只保存验证精度最高的模型（节省空间）
  save_frequency: 50                      # 保存频率：每隔多少个epoch保存一次
                                         # 1: 每个epoch都保存，2: 每2个epoch保存一次
  save_checkpoint_every_epoch: false      # 是否每个epoch都保存检查点（用于恢复训练）

# ==================== 恢复训练配置 ====================
resume:
  enabled: false                        # 是否启用恢复训练模式
                                         # false: 正常从头开始训练
                                         # true: 从检查点恢复训练
  checkpoint_path: ""                   # 指定检查点文件路径（可选）
                                         # 例如: "models/checkpoints/train_20241220_143022/checkpoint_epoch_50.pth"
                                         # 留空则使用auto_find_latest自动查找
  train_dir: ""                         # 指定训练目录名（可选）
                                         # 例如: "train_20241220_143022"
                                         # 留空则使用auto_find_latest自动查找
  auto_find_latest: true                # 自动查找最新检查点
                                         # true: 自动找到最新的检查点文件
                                         # false: 必须指定checkpoint_path或train_dir
  continue_from_epoch: null             # 从指定epoch继续（可选）
                                         # null: 从检查点记录的epoch继续
                                         # 数字: 强制从指定epoch开始（谨慎使用）

# ==================== 日志记录配置 ====================
logging:
  log_dir: "outputs/logs"               # 训练日志文件保存目录
                                        # 记录损失值、精度等训练过程数据
  plot_dir: "outputs/plots"             # 可视化图表保存目录
                                        # 保存训练曲线图、损失图等
  verbose: true                         # 是否显示详细训练信息
                                        # true: 显示详细进度条和统计信息
                                        # false: 只显示基本信息

# ==================== 数据增强配置 ====================
# 数据增强：通过变换增加数据多样性，提高模型泛化能力，防止过拟合
augmentation:
  # ==================== 预设配置选择 ====================
  # use_preset: "medium"               # 可选: "light", "medium", "heavy", null
                                       # 如果设置了预设，会覆盖下面的单独配置
                                       # 注释掉表示使用下面的自定义配置

  # ==================== 基础增强开关 ====================
  enable_flip: true                      # 是否启用水平翻转
                                        # 适用于左右对称的物体（如混凝土样本）
  enable_rotation: true                  # 是否启用随机旋转
                                        # 模拟不同拍摄角度
  enable_color_jitter: true              # 是否启用色彩抖动
                                        # 模拟不同光照条件
  enable_scale_jitter: true              # 是否启用尺度抖动
                                        # 模拟不同拍摄距离

  # ==================== 几何变换参数 ====================
  jitter: 0.3                          # 长宽比抖动范围 (0.0-1.0)
                                        # 0.3表示长宽比可变化±30%
  scale_range: [0.75, 1.25]            # 缩放范围：[最小倍数, 最大倍数]
                                        # 图像可缩放到75%-125%大小
  rotation_range: 15                    # 旋转角度范围 (度)
                                        # 图像可随机旋转±15度

  # ==================== 色彩变换参数 ====================
  hue_range: 0.1                        # 色调变化范围 (0.0-1.0)
                                        # 0.1表示色调可变化±10%
  saturation_range: 1.5                 # 饱和度变化范围 (>1.0)
                                        # 1.5表示饱和度可变化到150%
  value_range: 1.5                      # 明度(亮度)变化范围 (>1.0)
                                        # 1.5表示亮度可变化到150%

  # ==================== 概率控制 ====================
  flip_probability: 0.5                 # 翻转概率 (0.0-1.0)
                                        # 0.5表示50%的图像会被翻转
  rotation_probability: 0.5             # 旋转概率 (0.0-1.0)
                                        # 0.5表示50%的图像会被旋转

  # ==================== 图像噪声增强配置 ====================
  # 图像噪声：通过在像素级别添加噪声来降低图像质量，从而降低模型准确率
  noise:
    enable_noise: false                  # 是否启用图像噪声增强
                                        # false: 不添加噪声（默认）
                                        # true: 启用噪声增强功能
    noise_probability: 0.3               # 噪声应用概率 (0.0-1.0)
                                        # 0.3表示30%的图像会被添加噪声

    # ==================== 高斯噪声配置 ====================
    gaussian_noise:
      enable: false                       # 是否启用高斯噪声
      mean: 0.0                         # 高斯噪声均值
      std: 0.05                         # 高斯噪声标准差 (相对于[0,1]范围)
                                        # 0.05表示标准差为5%的像素值范围
      probability: 0.4                   # 高斯噪声应用概率

    # ==================== 椒盐噪声配置 ====================
    salt_pepper_noise:
      enable: false                       # 是否启用椒盐噪声
      salt_prob: 0.01                   # 盐噪声概率（白点）
      pepper_prob: 0.01                 # 椒噪声概率（黑点）
      probability: 0.3                   # 椒盐噪声应用概率

    # ==================== 均匀噪声配置 ====================
    uniform_noise:
      enable: false                       # 是否启用均匀噪声
      low: -0.05                        # 均匀噪声下界 (相对于[0,1]范围)
      high: 0.05                        # 均匀噪声上界 (相对于[0,1]范围)
      probability: 0.3                   # 均匀噪声应用概率

    # ==================== 泊松噪声配置 ====================
    poisson_noise:
      enable: false                      # 是否启用泊松噪声
      scale: 1.0                        # 泊松噪声缩放因子
      probability: 0.1                   # 泊松噪声应用概率

    # ==================== 模糊噪声配置 ====================
    blur_noise:
      enable: false                       # 是否启用模糊噪声
      kernel_size: 3                    # 模糊核大小 (奇数)
      sigma: 0.5                        # 高斯模糊标准差
      probability: 0.2                   # 模糊噪声应用概率

  # 预设配置 (可选择应用)
  presets:
    light:    # 轻度增强
      enable_flip: true
      enable_rotation: false
      enable_color_jitter: true
      enable_scale_jitter: false
      jitter: 0.1
      hue_range: 0.05
      saturation_range: 1.2
      value_range: 1.2

    medium:   # 中度增强 (推荐)
      enable_flip: true
      enable_rotation: true
      enable_color_jitter: true
      enable_scale_jitter: true
      jitter: 0.3
      rotation_range: 15
      hue_range: 0.1
      saturation_range: 1.5
      value_range: 1.5

    heavy:    # 重度增强
      enable_flip: true
      enable_rotation: true
      enable_color_jitter: true
      enable_scale_jitter: true
      jitter: 0.5
      rotation_range: 25
      hue_range: 0.2
      saturation_range: 2.0
      value_range: 2.0

    # ==================== 噪声增强预设 ====================
    noise_light:    # 轻度噪声增强
      noise:
        enable_noise: true
        noise_probability: 0.2
        gaussian_noise:
          enable: true
          std: 0.02
          probability: 0.5
        salt_pepper_noise:
          enable: false
        uniform_noise:
          enable: true
          low: -0.02
          high: 0.02
          probability: 0.3

    noise_medium:   # 中度噪声增强 (推荐)
      noise:
        enable_noise: true
        noise_probability: 0.3
        gaussian_noise:
          enable: true
          std: 0.05
          probability: 0.5
        salt_pepper_noise:
          enable: true
          salt_prob: 0.01
          pepper_prob: 0.01
          probability: 0.3
        uniform_noise:
          enable: true
          low: -0.05
          high: 0.05
          probability: 0.3
        blur_noise:
          enable: true
          probability: 0.2

    noise_heavy:    # 重度噪声增强
      noise:
        enable_noise: true
        noise_probability: 0.5
        gaussian_noise:
          enable: true
          std: 0.08
          probability: 0.6
        salt_pepper_noise:
          enable: true
          salt_prob: 0.02
          pepper_prob: 0.02
          probability: 0.4
        uniform_noise:
          enable: true
          low: -0.08
          high: 0.08
          probability: 0.4
        blur_noise:
          enable: true
          kernel_size: 5
          sigma: 1.0
          probability: 0.3
